{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/core/services\";\nimport * as i3 from \"src/app/shared/services\";\nimport * as i4 from \"@angular/router\";\nimport * as i5 from \"@angular/common\";\nfunction PostTripComponent_div_9_p_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 27);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r3.updateError);\n  }\n}\nfunction PostTripComponent_div_9_p_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 28);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r4.updateSuccess);\n  }\n}\nfunction PostTripComponent_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 24);\n    i0.ɵɵtemplate(1, PostTripComponent_div_9_p_1_Template, 2, 1, \"p\", 25);\n    i0.ɵɵtemplate(2, PostTripComponent_div_9_p_2_Template, 2, 1, \"p\", 26);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.updateError);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.updateSuccess);\n  }\n}\nfunction PostTripComponent_option_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 29);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const city_r5 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", city_r5 == null ? null : city_r5.city_id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", city_r5 == null ? null : city_r5.name, \" \");\n  }\n}\nfunction PostTripComponent_option_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 29);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const city_r6 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", city_r6 == null ? null : city_r6.city_id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", city_r6 == null ? null : city_r6.name, \" \");\n  }\n}\nexport class PostTripComponent {\n  constructor(fb, userService, dataService, router) {\n    this.fb = fb;\n    this.userService = userService;\n    this.dataService = dataService;\n    this.router = router;\n    this.updateError = '';\n    this.updateSuccess = '';\n    this.userId = '';\n    this.userDetails = {};\n    this.cities = [];\n  }\n  ngOnInit() {\n    this.userId = localStorage.getItem('userId');\n    this.postTripForm = this.fb.group({\n      student_id: [this.userId, Validators.required],\n      trip_from: ['', Validators.required],\n      trip_to: ['', Validators.required],\n      trip_date: ['', Validators.required],\n      trip_time: ['', Validators.required],\n      no_of_passanger: ['', Validators.required],\n      smoker: ['', Validators.required],\n      licend: ['', [Validators.required]],\n      description: ['', Validators.required],\n      notes: ['', Validators.required]\n    });\n    this.userDetails = this.dataService.getUserDetails().subscribe(res => {\n      if (res) {\n        this.userDetails = res;\n        if (this.userDetails?.country_id) {\n          this.getCities();\n        }\n      }\n    });\n  }\n  ngOnDestroy() {\n    if (this.userSubscription) {\n      this.userSubscription.unsubscribe();\n    }\n  }\n  getCities() {\n    this.cities = [];\n    let data = new FormData();\n    data.append('country_id', this.userDetails?.country_id);\n    this.userService.getCities(data).subscribe(res => {\n      this.cities = res?.data ? res?.data : [];\n    });\n  }\n  get getControls() {\n    return this.postTripForm.controls;\n  }\n  postTrip() {\n    this.updateError = \"\";\n    this.updateSuccess = \"\";\n    this.isLoading = true;\n    this.submited = true;\n    if (this.postTripForm.invalid) {\n      this.updateError = \"All fields are required*\";\n      this.postTripForm.markAllAsTouched();\n      this.isLoading = false;\n      return;\n    }\n    let value = this.postTripForm.value;\n    let keys = Object.keys(value);\n    let data = new FormData();\n    keys.forEach(key => {\n      data.append(key, value[key]);\n    });\n    this.userService.postTrip(data).subscribe(res => {\n      if (res?.status == '200') {\n        this.updateSuccess = \"Trip added successfully...\";\n        setTimeout(() => {\n          this.router.navigate(['/trips/listing']);\n          this.isLoading = false;\n        }, 1500);\n      } else {\n        this.isLoading = false;\n        this.updateError = res?.message ? res?.message : 'Something went wrong, try again';\n      }\n    }, error => {\n      this.updateError = 'Something went wrong, try again';\n      this.isLoading = false;\n    });\n  }\n}\nPostTripComponent.ɵfac = function PostTripComponent_Factory(t) {\n  return new (t || PostTripComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.UserService), i0.ɵɵdirectiveInject(i3.DataService), i0.ɵɵdirectiveInject(i4.Router));\n};\nPostTripComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: PostTripComponent,\n  selectors: [[\"app-post-trip\"]],\n  decls: 58,\n  vars: 13,\n  consts: [[1, \"container\"], [1, \"row\"], [3, \"formGroup\", \"ngSubmit\"], [\"class\", \"col-md-12\", 4, \"ngIf\"], [1, \"col-md-6\", \"col-sm-6\"], [\"formControlName\", \"trip_from\", 1, \"form-select\", 3, \"ngClass\"], [\"value\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"formControlName\", \"trip_to\", 1, \"form-select\", 3, \"ngClass\"], [\"type\", \"date\", \"placeholder\", \"Date\", \"formControlName\", \"trip_date\", 1, \"form-control\", 3, \"ngClass\"], [\"type\", \"time\", \"placeholder\", \"Time\", \"formControlName\", \"trip_time\", 1, \"form-control\", 3, \"ngClass\"], [\"type\", \"text\", \"placeholder\", \"No of passengers required\", \"formControlName\", \"no_of_passanger\", 1, \"form-control\", 3, \"ngClass\"], [\"formControlName\", \"smoker\", 1, \"form-select\", 3, \"ngClass\"], [\"value\", \"Smoker\"], [\"value\", \"Non-Smoker\"], [\"formControlName\", \"licend\", 1, \"form-select\", 3, \"ngClass\"], [\"value\", \"1 year\"], [\"value\", \"2 year\"], [\"value\", \"3 year\"], [\"value\", \"4 year\"], [\"rows\", \"1\", \"placeholder\", \"Car Description\", \"formControlName\", \"description\", 1, \"form-control\", 3, \"ngClass\"], [1, \"col-md-12\", \"col-sm-12\"], [\"cols\", \"30\", \"rows\", \"5\", \"placeholder\", \"Leave a notes\", \"formControlName\", \"notes\", 1, \"form-control\", 3, \"ngClass\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"], [1, \"col-md-12\"], [\"class\", \"text-danger\", 4, \"ngIf\"], [\"class\", \"text-success\", 4, \"ngIf\"], [1, \"text-danger\"], [1, \"text-success\"], [3, \"value\"]],\n  template: function PostTripComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"section\")(1, \"div\", 0)(2, \"div\", 1)(3, \"h2\");\n      i0.ɵɵtext(4, \"POST A TRIP\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(5, \"div\", 1)(6, \"form\", 2);\n      i0.ɵɵlistener(\"ngSubmit\", function PostTripComponent_Template_form_ngSubmit_6_listener() {\n        return ctx.postTrip();\n      });\n      i0.ɵɵelementStart(7, \"div\", 0)(8, \"div\", 1);\n      i0.ɵɵtemplate(9, PostTripComponent_div_9_Template, 3, 2, \"div\", 3);\n      i0.ɵɵelementStart(10, \"div\", 4)(11, \"select\", 5)(12, \"option\", 6);\n      i0.ɵɵtext(13, \" Select From City \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(14, PostTripComponent_option_14_Template, 2, 2, \"option\", 7);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(15, \"div\", 4)(16, \"select\", 8)(17, \"option\", 6);\n      i0.ɵɵtext(18, \" Select To City \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(19, PostTripComponent_option_19_Template, 2, 2, \"option\", 7);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(20, \"div\", 1)(21, \"div\", 4);\n      i0.ɵɵelement(22, \"input\", 9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(23, \"div\", 4);\n      i0.ɵɵelement(24, \"input\", 10);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(25, \"div\", 1)(26, \"div\", 4);\n      i0.ɵɵelement(27, \"input\", 11);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(28, \"div\", 4)(29, \"select\", 12)(30, \"option\", 6);\n      i0.ɵɵtext(31, \"Smoker/Non-Smoker \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(32, \"option\", 13);\n      i0.ɵɵtext(33, \"Smoker\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(34, \"option\", 14);\n      i0.ɵɵtext(35, \"Non-Smoker\");\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(36, \"div\", 1)(37, \"div\", 4)(38, \"select\", 15)(39, \"option\", 6);\n      i0.ɵɵtext(40, \"Years Licensed \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(41, \"option\", 16);\n      i0.ɵɵtext(42, \"1 year\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(43, \"option\", 17);\n      i0.ɵɵtext(44, \"2 years\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(45, \"option\", 18);\n      i0.ɵɵtext(46, \"3 years\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(47, \"option\", 19);\n      i0.ɵɵtext(48, \"4 years\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(49, \"div\", 4);\n      i0.ɵɵelement(50, \"textarea\", 20);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(51, \"div\", 1)(52, \"div\", 21);\n      i0.ɵɵelement(53, \"textarea\", 22);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(54, \"div\", 1)(55, \"div\", 21)(56, \"button\", 23);\n      i0.ɵɵtext(57, \"POST\");\n      i0.ɵɵelementEnd()()()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"formGroup\", ctx.postTripForm);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.updateError || ctx.updateSuccess);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngClass\", (ctx.submited || (ctx.getControls == null ? null : ctx.getControls.trip_from == null ? null : ctx.getControls.trip_from.touched)) && (ctx.getControls == null ? null : ctx.getControls.trip_from == null ? null : ctx.getControls.trip_from.errors) ? \"invalid-input\" : \"\");\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngForOf\", ctx.cities);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngClass\", (ctx.submited || (ctx.getControls == null ? null : ctx.getControls.trip_to == null ? null : ctx.getControls.trip_to.touched)) && (ctx.getControls == null ? null : ctx.getControls.trip_to == null ? null : ctx.getControls.trip_to.errors) ? \"invalid-input\" : \"\");\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngForOf\", ctx.cities);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngClass\", (ctx.submited || (ctx.getControls == null ? null : ctx.getControls.trip_date == null ? null : ctx.getControls.trip_date.touched)) && (ctx.getControls == null ? null : ctx.getControls.trip_date == null ? null : ctx.getControls.trip_date.errors) ? \"invalid-input\" : \"\");\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngClass\", (ctx.submited || (ctx.getControls == null ? null : ctx.getControls.trip_time == null ? null : ctx.getControls.trip_time.touched)) && (ctx.getControls == null ? null : ctx.getControls.trip_time == null ? null : ctx.getControls.trip_time.errors) ? \"invalid-input\" : \"\");\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngClass\", (ctx.submited || (ctx.getControls == null ? null : ctx.getControls.no_of_passanger == null ? null : ctx.getControls.no_of_passanger.touched)) && (ctx.getControls == null ? null : ctx.getControls.no_of_passanger == null ? null : ctx.getControls.no_of_passanger.errors) ? \"invalid-input\" : \"\");\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngClass\", (ctx.submited || (ctx.getControls == null ? null : ctx.getControls.smoker == null ? null : ctx.getControls.smoker.touched)) && (ctx.getControls == null ? null : ctx.getControls.smoker == null ? null : ctx.getControls.smoker.errors) ? \"invalid-input\" : \"\");\n      i0.ɵɵadvance(9);\n      i0.ɵɵproperty(\"ngClass\", (ctx.submited || (ctx.getControls == null ? null : ctx.getControls.licend == null ? null : ctx.getControls.licend.touched)) && (ctx.getControls == null ? null : ctx.getControls.licend == null ? null : ctx.getControls.licend.errors) ? \"invalid-input\" : \"\");\n      i0.ɵɵadvance(12);\n      i0.ɵɵproperty(\"ngClass\", (ctx.submited || (ctx.getControls == null ? null : ctx.getControls.description == null ? null : ctx.getControls.description.touched)) && (ctx.getControls == null ? null : ctx.getControls.description == null ? null : ctx.getControls.description.errors) ? \"invalid-input\" : \"\");\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngClass\", (ctx.submited || (ctx.getControls == null ? null : ctx.getControls.notes == null ? null : ctx.getControls.notes.touched)) && (ctx.getControls == null ? null : ctx.getControls.notes == null ? null : ctx.getControls.notes.errors) ? \"invalid-input\" : \"\");\n    }\n  },\n  dependencies: [i5.NgClass, i5.NgForOf, i5.NgIf, i1.ɵNgNoValidate, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.DefaultValueAccessor, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n  styles: [\"h2[_ngcontent-%COMP%] {\\r\\n    text-align: center;\\r\\n    padding-top: 30px;\\r\\n}\\r\\n\\r\\nform[_ngcontent-%COMP%]   input[_ngcontent-%COMP%], select[_ngcontent-%COMP%], .form-control[_ngcontent-%COMP%], label[_ngcontent-%COMP%] {\\r\\n    margin: 10px;\\r\\n}\\r\\n\\r\\n.btn[_ngcontent-%COMP%] {\\r\\n    width: 200px;\\r\\n    margin: 20px;\\r\\n    margin-top: 10px;\\r\\n    margin-bottom: 50px;\\r\\n    background: #4E6E81;\\r\\n    border: none;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvYWxsLW1vZHVsZXMvcGFnZXMvdHJpcHMvcG9zdC10cmlwL3Bvc3QtdHJpcC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksa0JBQWtCO0lBQ2xCLGlCQUFpQjtBQUNyQjs7QUFFQTs7OztJQUlJLFlBQVk7QUFDaEI7O0FBRUE7SUFDSSxZQUFZO0lBQ1osWUFBWTtJQUNaLGdCQUFnQjtJQUNoQixtQkFBbUI7SUFDbkIsbUJBQW1CO0lBQ25CLFlBQVk7QUFDaEIiLCJzb3VyY2VzQ29udGVudCI6WyJoMiB7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICBwYWRkaW5nLXRvcDogMzBweDtcclxufVxyXG5cclxuZm9ybSBpbnB1dCxcclxuc2VsZWN0LFxyXG4uZm9ybS1jb250cm9sLFxyXG5sYWJlbCB7XHJcbiAgICBtYXJnaW46IDEwcHg7XHJcbn1cclxuXHJcbi5idG4ge1xyXG4gICAgd2lkdGg6IDIwMHB4O1xyXG4gICAgbWFyZ2luOiAyMHB4O1xyXG4gICAgbWFyZ2luLXRvcDogMTBweDtcclxuICAgIG1hcmdpbi1ib3R0b206IDUwcHg7XHJcbiAgICBiYWNrZ3JvdW5kOiAjNEU2RTgxO1xyXG4gICAgYm9yZGVyOiBub25lO1xyXG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["Validators","i0","PostTripComponent","constructor","fb","userService","dataService","router","ngOnInit","userId","localStorage","getItem","postTripForm","group","student_id","required","trip_from","trip_to","trip_date","trip_time","no_of_passanger","smoker","licend","description","notes","userDetails","getUserDetails","subscribe","res","country_id","getCities","ngOnDestroy","userSubscription","unsubscribe","cities","data","FormData","append","getControls","controls","postTrip","updateError","updateSuccess","isLoading","submited","invalid","markAllAsTouched","value","keys","Object","forEach","key","status","setTimeout","navigate","message","error","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\saisu\\Desktop\\abroadbuddy-main\\abroadbuddy-main\\src\\app\\all-modules\\pages\\trips\\post-trip\\post-trip.component.ts","C:\\Users\\saisu\\Desktop\\abroadbuddy-main\\abroadbuddy-main\\src\\app\\all-modules\\pages\\trips\\post-trip\\post-trip.component.html"],"sourcesContent":["import { Component, OnInit} from '@angular/core';\r\nimport { FormGroup,FormBuilder, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { UserService } from 'src/app/core/services';\r\nimport { DataService } from 'src/app/shared/services';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-post-trip',\r\n  templateUrl: './post-trip.component.html',\r\n  styleUrls: ['./post-trip.component.css']\r\n})\r\nexport class PostTripComponent {\r\n  postTripForm:FormGroup;\r\n  \r\n  submited: boolean; \r\n  isLoading:boolean; \r\n  updateError = ''; \r\n  updateSuccess = '';\r\n  userId:any ='';\r\n  userDetails:any={};\r\n  userSubscription:Subscription;  \r\n  cities:any=[];\r\n\r\n  constructor(private fb: FormBuilder, private userService: UserService,  private dataService:DataService, private router:Router) { }\r\n  ngOnInit(): void {\r\n    this.userId = localStorage.getItem('userId');\r\n    this.postTripForm = this.fb.group({\r\n          student_id:[this.userId, Validators.required],\r\n          trip_from :['', Validators.required], \r\n          trip_to :['', Validators.required], \r\n          trip_date:['', Validators.required],\r\n          trip_time:['', Validators.required],\r\n          no_of_passanger:['', Validators.required],\r\n          smoker:['', Validators.required],\r\n          licend:['', [Validators.required]],\r\n          description:['', Validators.required],\r\n          notes:['',Validators.required],\r\n    });\r\n    this.userDetails = this.dataService.getUserDetails().subscribe((res:any)=>{\r\n      if(res){\r\n        this.userDetails = res;\r\n        if(this.userDetails?.country_id){\r\n          this.getCities();\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  ngOnDestroy(){\r\n    if(this.userSubscription){this.userSubscription.unsubscribe()}\r\n  }\r\n  getCities(){\r\n    this.cities = [];\r\n    let data = new FormData();\r\n    data.append('country_id', this.userDetails?.country_id);\r\n    this.userService.getCities(data).subscribe((res:any)=>{\r\n      this.cities = res?.data?res?.data:[];\r\n    }); \r\n  }\r\n\r\n  get getControls(){\r\n    return this.postTripForm.controls;\r\n  }\r\n\r\n  \r\n\r\n  postTrip(){\r\n    this.updateError   = \"\";\r\n    this.updateSuccess = \"\";\r\n    this.isLoading     = true;\r\n    this.submited      = true;\r\n    if(this.postTripForm.invalid){\r\n      this.updateError = \"All fields are required*\";\r\n      this.postTripForm.markAllAsTouched();\r\n      this.isLoading = false;\r\n      return;\r\n    }\r\n\r\n    let value = this.postTripForm.value;\r\n    let keys = Object.keys(value);\r\n\r\n    let data = new FormData();\r\n    keys.forEach(key=>{\r\n      data.append(key, value[key]);\r\n    })\r\n\r\n    this.userService.postTrip(data).subscribe((res:any)=>{\r\n      if(res?.status == '200'){\r\n        this.updateSuccess = \"Trip added successfully...\";\r\n        setTimeout(()=>{\r\n          this.router.navigate(['/trips/listing']);\r\n           this.isLoading = false;\r\n        }, 1500)\r\n\r\n      }else{\r\n        this.isLoading = false;\r\n        this.updateError = res?.message?res?.message:'Something went wrong, try again';\r\n      }\r\n    }, error=>{\r\n      this.updateError = 'Something went wrong, try again';\r\n      this.isLoading = false;\r\n    })\r\n\r\n  }\r\n\r\n}\r\n","<section>\r\n    <div class=\"container\">\r\n        <div class=\"row\">\r\n            <h2>POST A TRIP</h2>\r\n        </div>\r\n        <div class=\"row\">\r\n            <form [formGroup]=\"postTripForm\" (ngSubmit)=\"postTrip()\">\r\n                <div class=\"container\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-12\" *ngIf=\"updateError || updateSuccess\">\r\n                            <p class=\"text-danger\"  *ngIf=\"updateError\">{{updateError}}</p>\r\n                            <p class=\"text-success\"  *ngIf=\"updateSuccess\">{{updateSuccess}}</p>\r\n                        </div>\r\n\r\n                        <div class=\"col-md-6 col-sm-6\">\r\n                            <select class=\"form-select\" formControlName=\"trip_from\" [ngClass]=\"((submited || getControls?.trip_from?.touched) && getControls?.trip_from?.errors)?'invalid-input':''\" >\r\n                                <option value=\"\"> Select From City </option>\r\n                                <option [value]=\"city?.city_id\" *ngFor=\"let city of cities;\"> {{city?.name}} </option>\r\n                             </select>\r\n                            <!-- <input type=\"text\" class=\"form-control\" placeholder=\"From\" formControlName=\"trip_from\" [ngClass]=\"((submited || getControls?.trip_from?.touched) && getControls?.trip_from?.errors)?'invalid-input':''\"> -->\r\n                        </div>\r\n                        <div class=\"col-md-6 col-sm-6\">\r\n                            <select class=\"form-select\" formControlName=\"trip_to\" [ngClass]=\"((submited || getControls?.trip_to?.touched) && getControls?.trip_to?.errors)?'invalid-input':''\">\r\n                                <option value=\"\"> Select To City </option>\r\n                                <option [value]=\"city?.city_id\" *ngFor=\"let city of cities;\"> {{city?.name}} </option>\r\n                             </select>\r\n                            <!-- <input type=\"text\" class=\"form-control\" placeholder=\"To\" formControlName=\"trip_to\" [ngClass]=\"((submited || getControls?.trip_to?.touched) && getControls?.trip_to?.errors)?'invalid-input':''\"> -->\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-6 col-sm-6\">\r\n                            <!-- <label for=\"\" class=\"form-label\">Date</label> -->\r\n                            <input type=\"date\" class=\"form-control\" placeholder=\"Date\" formControlName=\"trip_date\" [ngClass]=\"((submited || getControls?.trip_date?.touched) && getControls?.trip_date?.errors)?'invalid-input':''\">\r\n                        </div>\r\n                        <div class=\"col-md-6 col-sm-6\">\r\n                            <!-- <label for=\"\" class=\"form-label\">Time</label> -->\r\n                            <input type=\"time\" class=\"form-control\" placeholder=\"Time\" formControlName=\"trip_time\" [ngClass]=\"((submited || getControls?.trip_time?.touched) && getControls?.trip_time?.errors)?'invalid-input':''\">\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-6 col-sm-6\">\r\n                            <input type=\"text\" class=\"form-control\" placeholder=\"No of passengers required\" formControlName=\"no_of_passanger\" [ngClass]=\"((submited || getControls?.no_of_passanger?.touched) && getControls?.no_of_passanger?.errors)?'invalid-input':''\">\r\n                        </div>\r\n                        <div class=\"col-md-6 col-sm-6\">\r\n                            <select class=\"form-select\" formControlName=\"smoker\" [ngClass]=\"((submited || getControls?.smoker?.touched) && getControls?.smoker?.errors)?'invalid-input':''\">\r\n                                <option value=\"\">Smoker/Non-Smoker </option>\r\n                                <option value=\"Smoker\">Smoker</option>\r\n                                <option value=\"Non-Smoker\">Non-Smoker</option>\r\n                            </select>\r\n                            <!-- <input type=\"text\" class=\"form-control\" placeholder=\"Smoker/non-smoker\" formControlName=\"smoker\" [ngClass]=\"((submited || getControls?.smoker?.touched) && getControls?.smoker?.errors)?'invalid-input':''\"> -->\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-6 col-sm-6\">\r\n                            <select class=\"form-select\" formControlName=\"licend\" [ngClass]=\"((submited || getControls?.licend?.touched) && getControls?.licend?.errors)?'invalid-input':''\">\r\n                                <option value=\"\">Years Licensed </option>\r\n                                <option value=\"1 year\">1 year</option>\r\n                                <option value=\"2 year\">2 years</option>\r\n                                <option value=\"3 year\">3 years</option>\r\n                                <option value=\"4 year\">4 years</option>\r\n                            </select>\r\n                        </div>\r\n                        <div class=\"col-md-6 col-sm-6\">\r\n                            <textarea class=\"form-control\" rows=\"1\" placeholder=\"Car Description\" formControlName=\"description\" [ngClass]=\"((submited || getControls?.description?.touched) && getControls?.description?.errors)?'invalid-input':''\"></textarea>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-12 col-sm-12\">\r\n                            <textarea class=\"form-control\" cols=\"30\" rows=\"5\" placeholder=\"Leave a notes\" formControlName=\"notes\" [ngClass]=\"((submited || getControls?.notes?.touched) && getControls?.notes?.errors)?'invalid-input':''\"></textarea>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-12 col-sm-12\">\r\n                            <button type=\"submit\" class=\"btn btn-primary\">POST</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</section>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
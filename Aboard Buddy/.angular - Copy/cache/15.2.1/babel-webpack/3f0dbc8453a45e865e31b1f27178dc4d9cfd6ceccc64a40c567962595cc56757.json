{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/core/services\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction ChatComponent_div_8_button_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 13);\n    i0.ɵɵlistener(\"click\", function ChatComponent_div_8_button_6_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r10);\n      const req_r3 = i0.ɵɵnextContext().$implicit;\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.acceptRejectRequest(req_r3.id, \"1\"));\n    });\n    i0.ɵɵtext(1, \"Accept\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ChatComponent_div_8_span_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 14);\n    i0.ɵɵtext(1, \"Accepted\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ChatComponent_div_8_span_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 15);\n    i0.ɵɵtext(1, \"Declined\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ChatComponent_div_8_button_9_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r13 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 16);\n    i0.ɵɵlistener(\"click\", function ChatComponent_div_8_button_9_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r13);\n      const req_r3 = i0.ɵɵnextContext().$implicit;\n      const ctx_r11 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r11.acceptRejectRequest(req_r3.id, \"2\"));\n    });\n    i0.ɵɵtext(1, \"Decline\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ChatComponent_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 7)(1, \"div\", 8)(2, \"b\");\n    i0.ɵɵtext(3);\n    i0.ɵɵpipe(4, \"titlecase\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(5, \", want to connect with you \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(6, ChatComponent_div_8_button_6_Template, 2, 0, \"button\", 9);\n    i0.ɵɵtemplate(7, ChatComponent_div_8_span_7_Template, 2, 0, \"span\", 10);\n    i0.ɵɵtemplate(8, ChatComponent_div_8_span_8_Template, 2, 0, \"span\", 11);\n    i0.ɵɵtemplate(9, ChatComponent_div_8_button_9_Template, 2, 0, \"button\", 12);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const req_r3 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(4, 5, (req_r3 == null ? null : req_r3.from_id) == ctx_r0.userId ? req_r3 == null ? null : req_r3.to_name : req_r3 == null ? null : req_r3.from_name), \"\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", (req_r3 == null ? null : req_r3.approved) != 1);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (req_r3 == null ? null : req_r3.approved) == 1);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (req_r3 == null ? null : req_r3.approved) == 2 && (req_r3 == null ? null : req_r3.approved) != 1);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (req_r3 == null ? null : req_r3.approved) != 2);\n  }\n}\nfunction ChatComponent_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 7)(1, \"div\", 8);\n    i0.ɵɵtext(2, \"No new chat request available.\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction ChatComponent_div_10_div_3_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r20 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 24);\n    i0.ɵɵlistener(\"click\", function ChatComponent_div_10_div_3_div_3_Template_div_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r20);\n      const contact_r18 = restoredCtx.$implicit;\n      const ctx_r19 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r19.onChangeContact(contact_r18));\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"titlecase\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const contact_r18 = ctx.$implicit;\n    const ctx_r15 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"ngClass\", (contact_r18 == null ? null : contact_r18.from_id) == ctx_r15.selectedUserId ? \"active\" : \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(2, 2, (contact_r18 == null ? null : contact_r18.from_id) == ctx_r15.userId ? contact_r18 == null ? null : contact_r18.to_name : contact_r18 == null ? null : contact_r18.from_name), \" \");\n  }\n}\nfunction ChatComponent_div_10_div_3_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 25);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const message_r21 = ctx.$implicit;\n    const ctx_r16 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"ngClass\", (message_r21 == null ? null : message_r21.from_id) == ctx_r16.selectedUserId ? \"user-message\" : \"bot-message\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(message_r21 == null ? null : message_r21.message);\n  }\n}\nfunction ChatComponent_div_10_div_3_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r23 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 7)(1, \"input\", 26);\n    i0.ɵɵlistener(\"ngModelChange\", function ChatComponent_div_10_div_3_div_11_Template_input_ngModelChange_1_listener($event) {\n      i0.ɵɵrestoreView(_r23);\n      const ctx_r22 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r22.messageText = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(2, \"button\", 27);\n    i0.ɵɵlistener(\"click\", function ChatComponent_div_10_div_3_div_11_Template_button_click_2_listener() {\n      i0.ɵɵrestoreView(_r23);\n      const ctx_r24 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r24.sendMessage());\n    });\n    i0.ɵɵtext(3, \"Send\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r17 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngModel\", ctx_r17.messageText);\n  }\n}\nfunction ChatComponent_div_10_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 1)(1, \"div\", 2)(2, \"div\", 18);\n    i0.ɵɵtemplate(3, ChatComponent_div_10_div_3_div_3_Template, 3, 4, \"div\", 19);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(4, \"div\", 2)(5, \"h2\", 20);\n    i0.ɵɵtext(6, \"Chat\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"div\", 1)(8, \"div\", 21)(9, \"div\", 22);\n    i0.ɵɵtemplate(10, ChatComponent_div_10_div_3_div_10_Template, 2, 2, \"div\", 23);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(11, ChatComponent_div_10_div_3_div_11_Template, 4, 1, \"div\", 5);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r14 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r14.contacts);\n    i0.ɵɵadvance(7);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r14.messages)(\"ngForTrackBy\", ctx_r14.messageIdentity);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r14.selectedUserId);\n  }\n}\nfunction ChatComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 2)(1, \"h2\");\n    i0.ɵɵtext(2, \"Your Connect's\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(3, ChatComponent_div_10_div_3_Template, 12, 4, \"div\", 17);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.contacts == null ? null : ctx_r2.contacts.length);\n  }\n}\nexport class ChatComponent {\n  constructor(chatService, router, route) {\n    this.chatService = chatService;\n    this.router = router;\n    this.route = route;\n    this.userId = \"\";\n    this.selectedUserId = '';\n    this.requests = [];\n    this.contacts = [];\n    this.messages = [];\n    this.route.queryParams.subscribe(param => {\n      this.selectedUserId = param?.selectedUserId;\n    });\n  }\n  ngOnInit() {\n    this.userId = localStorage.getItem('userId');\n    this.getChatRequests();\n    this.getConnections();\n    if (this.selectedUserId) {\n      this.getMessages();\n    }\n  }\n  ngOnDestroy() {\n    clearInterval(this.messageInterval);\n  }\n  getChatRequests() {\n    let data = new FormData();\n    data.append('my_id', this.userId);\n    this.chatService.getRequests(data).subscribe(res => {\n      this.requests = res?.data ? res?.data : [];\n      // this.contacts = this.requests;\n    });\n  }\n\n  getConnections() {\n    let data = new FormData();\n    data.append('my_id', this.userId);\n    this.chatService.getContacts(data).subscribe(res => {\n      this.contacts = res?.data ? res?.data : [];\n    });\n  }\n  getMessages(clearMessageInterval = true) {\n    let data = new FormData();\n    data.append('from_id', this.userId);\n    data.append('to_id', this.selectedUserId);\n    // console.log(\"fromId=\"+this.userId+\", to_id=\"+this.selectedUserId);\n    this.chatService.getMessage(data).subscribe(res => {\n      if (clearMessageInterval) {\n        clearInterval(this.messageInterval);\n        this.setMessageInterval();\n      }\n      this.messages = res?.data ? res?.data : [];\n    });\n  }\n  setMessageInterval() {\n    this.messageInterval = setInterval(() => {\n      this.getMessages(false);\n    }, 2500);\n  }\n  messageIdentity(index, item) {\n    return item.id;\n  }\n  sendMessage() {\n    let data = new FormData();\n    data.append('from_id', this.userId);\n    data.append('to_id', this.selectedUserId);\n    data.append('message', this.messageText);\n    this.chatService.sendMessage(data).subscribe(res => {\n      this.messageText = \"\";\n      this.getMessages();\n    });\n  }\n  acceptRejectRequest(id, action) {\n    let data = new FormData();\n    data.append('id', id);\n    data.append('status', action);\n    this.chatService.acceptRejectRequest(data).subscribe(res => {\n      this.getChatRequests();\n    });\n  }\n  onChangeContact(contact) {\n    console.log('contact', contact);\n    this.selectedUserId = contact?.from_id == this.userId ? contact?.to_id : contact?.from_id;\n    if (this.selectedUserId) {\n      this.getMessages();\n    }\n  }\n}\nChatComponent.ɵfac = function ChatComponent_Factory(t) {\n  return new (t || ChatComponent)(i0.ɵɵdirectiveInject(i1.ChatService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n};\nChatComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ChatComponent,\n  selectors: [[\"app-chat\"]],\n  decls: 11,\n  vars: 3,\n  consts: [[1, \"container\"], [1, \"row\"], [1, \"col-md-6\"], [1, \"chat-request\"], [\"class\", \"col-md-12\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"col-md-12\", 4, \"ngIf\"], [\"class\", \"col-md-6\", 4, \"ngIf\"], [1, \"col-md-12\"], [1, \"contact\"], [\"class\", \"btn btn-success accept\", 3, \"click\", 4, \"ngIf\"], [\"class\", \"label accept\", 4, \"ngIf\"], [\"class\", \"label  reject\", 4, \"ngIf\"], [\"class\", \"btn btn-danger  reject\", 3, \"click\", 4, \"ngIf\"], [1, \"btn\", \"btn-success\", \"accept\", 3, \"click\"], [1, \"label\", \"accept\"], [1, \"label\", \"reject\"], [1, \"btn\", \"btn-danger\", \"reject\", 3, \"click\"], [\"class\", \"row\", 4, \"ngIf\"], [1, \"contact-list\"], [\"class\", \"contact \", 3, \"ngClass\", \"click\", 4, \"ngFor\", \"ngForOf\"], [\"align\", \"Center\"], [1, \"col-md-12\", \"message-contanier\"], [1, \"chat-messages\"], [\"class\", \"chat-message\", 3, \"ngClass\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [1, \"contact\", 3, \"ngClass\", \"click\"], [1, \"chat-message\", 3, \"ngClass\"], [\"type\", \"text\", \"placeholder\", \"Enter your message here\", 1, \"message-input\", 3, \"ngModel\", \"ngModelChange\"], [1, \"btn\", \"btn-default\", 3, \"click\"]],\n  template: function ChatComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"section\")(1, \"div\", 0)(2, \"div\", 1)(3, \"div\", 2)(4, \"div\", 3)(5, \"h2\");\n      i0.ɵɵtext(6, \"New Chat Request\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"div\", 1);\n      i0.ɵɵtemplate(8, ChatComponent_div_8_Template, 10, 7, \"div\", 4);\n      i0.ɵɵtemplate(9, ChatComponent_div_9_Template, 3, 0, \"div\", 5);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵtemplate(10, ChatComponent_div_10_Template, 4, 1, \"div\", 6);\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"ngForOf\", ctx.requests);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !(ctx.requests == null ? null : ctx.requests.length));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.contacts == null ? null : ctx.contacts.length);\n    }\n  },\n  dependencies: [i3.NgClass, i3.NgForOf, i3.NgIf, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgModel, i3.TitleCasePipe],\n  styles: [\".chat-container[_ngcontent-%COMP%] {\\n    display: flex;\\n    flex-direction: column;\\n    height: 600px;\\n    width: 400px;\\n    border: 1px solid #dbdbdb;\\n    background-color: white;\\n    font-family: Arial, sans-serif;\\n    font-size: 14px;\\n}\\n\\n\\n.contact-list[_ngcontent-%COMP%] {\\n    width: 200px;\\n    background-color: #F7F7F7;\\n    padding: 10px;\\n    overflow-y: auto;\\n}\\n\\n\\n.contact[_ngcontent-%COMP%] {\\n    cursor: pointer;\\n    margin: 10px 0;\\n    padding: 10px;\\n    border-radius: 10px;\\n    background-color: #E2E2E2;\\n}\\n\\n.contact[_ngcontent-%COMP%]:hover {\\n    background-color: #D1D1D1;\\n}\\n\\n.contact.active[_ngcontent-%COMP%] {\\n    background-color: #DCF8C6;\\n}\\n\\n\\n.chat-messages[_ngcontent-%COMP%] {\\n    flex: 1;\\n    display: flex;\\n    flex-direction: column;\\n    overflow: auto;\\n    padding: 10px;\\n}\\n\\n\\n.chat-message[_ngcontent-%COMP%] {\\n    background-color: #F7F7F7;\\n    padding: 10px;\\n    margin: 10px 0;\\n    border-radius: 10px;\\n    max-width: 80%;\\n}\\n\\n\\n.user-message[_ngcontent-%COMP%] {\\n    background-color: #DCF8C6;\\n    align-self: flex-end;\\n}\\n\\n\\n.bot-message[_ngcontent-%COMP%] {\\n    background-color: #E2E2E2;\\n    align-self: flex-start;\\n}\\n\\n\\n.input-field[_ngcontent-%COMP%] {\\n    flex-grow: 1;\\n  margin-right: 10px;\\n  border: none;\\n  padding: 10px;\\n  background-color: #fafafa;\\n  border-radius: 30px;\\n}\\n\\n.btn[_ngcontent-%COMP%]{\\n    background-color: #3897f0;\\n  color: white;\\n  border: none;\\n  padding: 10px 20px;\\n  border-radius: 30px;\\n  cursor: pointer;\\n}\\n\\n.message-contanier[_ngcontent-%COMP%]{\\n    background-color: #fafafa;\\n    max-height: 350px;\\n    overflow: auto;\\n}\\n.message-input[_ngcontent-%COMP%]{\\n    margin-top: 5px;\\n    border: 2px solid;\\n    align-items: left;\\n    border-top: 1px solid #dbdbdb;\\n    background-color: #fafafa;\\n    padding: 10px;\\n    display: flex;\\n    border: none;\\n    border-radius: 30px;\\n    \\n}\\n.message-input[_ngcontent-%COMP%]   input[type=\\\"text\\\"][_ngcontent-%COMP%] {\\n    flex-grow: 1;\\n    margin-right: 10px;\\n    border: none;\\n    padding: 10px;\\n    background-color: #fafafa;\\n    border-radius: 30px;\\n  }\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvYWxsLW1vZHVsZXMvcGFnZXMvY2hhdGluZy9jaGF0L2NoYXQuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQ0EsbUJBQW1CO0FBQ25CO0lBQ0ksYUFBYTtJQUNiLHNCQUFzQjtJQUN0QixhQUFhO0lBQ2IsWUFBWTtJQUNaLHlCQUF5QjtJQUN6Qix1QkFBdUI7SUFDdkIsOEJBQThCO0lBQzlCLGVBQWU7QUFDbkI7O0FBRUEsaUJBQWlCO0FBQ2pCO0lBQ0ksWUFBWTtJQUNaLHlCQUF5QjtJQUN6QixhQUFhO0lBQ2IsZ0JBQWdCO0FBQ3BCOztBQUVBLFlBQVk7QUFDWjtJQUNJLGVBQWU7SUFDZixjQUFjO0lBQ2QsYUFBYTtJQUNiLG1CQUFtQjtJQUNuQix5QkFBeUI7QUFDN0I7O0FBRUE7SUFDSSx5QkFBeUI7QUFDN0I7O0FBRUE7SUFDSSx5QkFBeUI7QUFDN0I7O0FBRUEsa0JBQWtCO0FBQ2xCO0lBQ0ksT0FBTztJQUNQLGFBQWE7SUFDYixzQkFBc0I7SUFDdEIsY0FBYztJQUNkLGFBQWE7QUFDakI7O0FBRUEsaUJBQWlCO0FBQ2pCO0lBQ0kseUJBQXlCO0lBQ3pCLGFBQWE7SUFDYixjQUFjO0lBQ2QsbUJBQW1CO0lBQ25CLGNBQWM7QUFDbEI7O0FBRUEsaUJBQWlCO0FBQ2pCO0lBQ0kseUJBQXlCO0lBQ3pCLG9CQUFvQjtBQUN4Qjs7QUFFQSxnQkFBZ0I7QUFDaEI7SUFDSSx5QkFBeUI7SUFDekIsc0JBQXNCO0FBQzFCOztBQUVBLGdCQUFnQjtBQUNoQjtJQUNJLFlBQVk7RUFDZCxrQkFBa0I7RUFDbEIsWUFBWTtFQUNaLGFBQWE7RUFDYix5QkFBeUI7RUFDekIsbUJBQW1CO0FBQ3JCOztBQUVBO0lBQ0kseUJBQXlCO0VBQzNCLFlBQVk7RUFDWixZQUFZO0VBQ1osa0JBQWtCO0VBQ2xCLG1CQUFtQjtFQUNuQixlQUFlO0FBQ2pCOztBQUVBO0lBQ0kseUJBQXlCO0lBQ3pCLGlCQUFpQjtJQUNqQixjQUFjO0FBQ2xCO0FBQ0E7SUFDSSxlQUFlO0lBQ2YsaUJBQWlCO0lBQ2pCLGlCQUFpQjtJQUNqQiw2QkFBNkI7SUFDN0IseUJBQXlCO0lBQ3pCLGFBQWE7SUFDYixhQUFhO0lBQ2IsWUFBWTtJQUNaLG1CQUFtQjs7QUFFdkI7QUFDQTtJQUNJLFlBQVk7SUFDWixrQkFBa0I7SUFDbEIsWUFBWTtJQUNaLGFBQWE7SUFDYix5QkFBeUI7SUFDekIsbUJBQW1CO0VBQ3JCIiwic291cmNlc0NvbnRlbnQiOlsiXG4vKiBDaGF0IGNvbnRhaW5lciAqL1xuLmNoYXQtY29udGFpbmVyIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgaGVpZ2h0OiA2MDBweDtcbiAgICB3aWR0aDogNDAwcHg7XG4gICAgYm9yZGVyOiAxcHggc29saWQgI2RiZGJkYjtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcbiAgICBmb250LWZhbWlseTogQXJpYWwsIHNhbnMtc2VyaWY7XG4gICAgZm9udC1zaXplOiAxNHB4O1xufVxuXG4vKiBDb250YWN0IGxpc3QgKi9cbi5jb250YWN0LWxpc3Qge1xuICAgIHdpZHRoOiAyMDBweDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRjdGN0Y3O1xuICAgIHBhZGRpbmc6IDEwcHg7XG4gICAgb3ZlcmZsb3cteTogYXV0bztcbn1cblxuLyogQ29udGFjdCAqL1xuLmNvbnRhY3Qge1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICBtYXJnaW46IDEwcHggMDtcbiAgICBwYWRkaW5nOiAxMHB4O1xuICAgIGJvcmRlci1yYWRpdXM6IDEwcHg7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI0UyRTJFMjtcbn1cblxuLmNvbnRhY3Q6aG92ZXIge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNEMUQxRDE7XG59XG5cbi5jb250YWN0LmFjdGl2ZSB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI0RDRjhDNjtcbn1cblxuLyogQ2hhdCBtZXNzYWdlcyAqL1xuLmNoYXQtbWVzc2FnZXMge1xuICAgIGZsZXg6IDE7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgIG92ZXJmbG93OiBhdXRvO1xuICAgIHBhZGRpbmc6IDEwcHg7XG59XG5cbi8qIENoYXQgbWVzc2FnZSAqL1xuLmNoYXQtbWVzc2FnZSB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI0Y3RjdGNztcbiAgICBwYWRkaW5nOiAxMHB4O1xuICAgIG1hcmdpbjogMTBweCAwO1xuICAgIGJvcmRlci1yYWRpdXM6IDEwcHg7XG4gICAgbWF4LXdpZHRoOiA4MCU7XG59XG5cbi8qIFVzZXIgbWVzc2FnZSAqL1xuLnVzZXItbWVzc2FnZSB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI0RDRjhDNjtcbiAgICBhbGlnbi1zZWxmOiBmbGV4LWVuZDtcbn1cblxuLyogQm90IG1lc3NhZ2UgKi9cbi5ib3QtbWVzc2FnZSB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI0UyRTJFMjtcbiAgICBhbGlnbi1zZWxmOiBmbGV4LXN0YXJ0O1xufVxuXG4vKiBJbnB1dCBmaWVsZCAqL1xuLmlucHV0LWZpZWxkIHtcbiAgICBmbGV4LWdyb3c6IDE7XG4gIG1hcmdpbi1yaWdodDogMTBweDtcbiAgYm9yZGVyOiBub25lO1xuICBwYWRkaW5nOiAxMHB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmFmYWZhO1xuICBib3JkZXItcmFkaXVzOiAzMHB4O1xufVxuXG4uYnRue1xuICAgIGJhY2tncm91bmQtY29sb3I6ICMzODk3ZjA7XG4gIGNvbG9yOiB3aGl0ZTtcbiAgYm9yZGVyOiBub25lO1xuICBwYWRkaW5nOiAxMHB4IDIwcHg7XG4gIGJvcmRlci1yYWRpdXM6IDMwcHg7XG4gIGN1cnNvcjogcG9pbnRlcjtcbn1cblxuLm1lc3NhZ2UtY29udGFuaWVye1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNmYWZhZmE7XG4gICAgbWF4LWhlaWdodDogMzUwcHg7XG4gICAgb3ZlcmZsb3c6IGF1dG87XG59XG4ubWVzc2FnZS1pbnB1dHtcbiAgICBtYXJnaW4tdG9wOiA1cHg7XG4gICAgYm9yZGVyOiAycHggc29saWQ7XG4gICAgYWxpZ24taXRlbXM6IGxlZnQ7XG4gICAgYm9yZGVyLXRvcDogMXB4IHNvbGlkICNkYmRiZGI7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2ZhZmFmYTtcbiAgICBwYWRkaW5nOiAxMHB4O1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgYm9yZGVyOiBub25lO1xuICAgIGJvcmRlci1yYWRpdXM6IDMwcHg7XG4gICAgXG59XG4ubWVzc2FnZS1pbnB1dCBpbnB1dFt0eXBlPVwidGV4dFwiXSB7XG4gICAgZmxleC1ncm93OiAxO1xuICAgIG1hcmdpbi1yaWdodDogMTBweDtcbiAgICBib3JkZXI6IG5vbmU7XG4gICAgcGFkZGluZzogMTBweDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmFmYWZhO1xuICAgIGJvcmRlci1yYWRpdXM6IDMwcHg7XG4gIH0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":"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","names":["i0","ChatComponent","constructor","chatService","router","route","queryParams","subscribe","param","selectedUserId","ngOnInit","userId","localStorage","getItem","getChatRequests","getConnections","getMessages","ngOnDestroy","clearInterval","messageInterval","data","FormData","append","getRequests","res","requests","getContacts","contacts","clearMessageInterval","getMessage","setMessageInterval","messages","setInterval","messageIdentity","index","item","id","sendMessage","messageText","acceptRejectRequest","action","onChangeContact","contact","console","log","from_id","to_id","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\saisu\\Desktop\\abroadbuddy-main\\abroadbuddy-main\\src\\app\\all-modules\\pages\\chating\\chat\\chat.component.html","C:\\Users\\saisu\\Desktop\\abroadbuddy-main\\abroadbuddy-main\\src\\app\\all-modules\\pages\\chating\\chat\\chat.component.ts"],"sourcesContent":["<section>\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-md-6\">\n                <div class=\"chat-request\">\n                    <h2>New Chat Request</h2>\n                    <div class=\"row\">\n                        <div class=\"col-md-12\" *ngFor=\"let req of requests;\">\n                            <div class=\"contact\"><b> {{((req?.from_id == userId)?req?.to_name:req?.from_name) |titlecase }}</b>, want to connect with you </div>\n                            <button class=\"btn btn-success accept\" (click)=\"acceptRejectRequest(req.id, '1')\" *ngIf=\"req?.approved != 1 \">Accept</button>\n                            <span class=\"label accept\"  *ngIf=\"req?.approved == 1\">Accepted</span>\n                            <span class=\"label  reject\" *ngIf=\"req?.approved == 2 && req?.approved != 1\">Declined</span>\n\n                            <button class=\"btn btn-danger  reject\" (click)=\"acceptRejectRequest(req.id, '2')\" *ngIf=\"req?.approved != 2\">Decline</button>\n\n                            <!-- <button class=\"btn btn-success reject\" *ngIf=\"req?.approved==1\"> Chat</button> -->\n                        </div>\n                        <div class=\"col-md-12\" *ngIf=\"!requests?.length\">\n                            <div class=\"contact\">No new chat request available.</div>\n                        </div>\n                    </div>\n                    \n                </div>\n            </div>\n            <div class=\"col-md-6\" *ngIf=\"contacts?.length\">\n                <h2>Your Connect's</h2>\n                <div class=\"row\" *ngIf=\"contacts?.length\">\n                    <div class=\"col-md-6\">\n                        <div class=\"contact-list\">\n                            <div class=\"contact \" [ngClass]=\"contact?.from_id==selectedUserId?'active':''\" *ngFor=\"let contact of contacts;\" (click)=\"onChangeContact(contact)\">\n                                {{((contact?.from_id == userId)?contact?.to_name:contact?.from_name) |titlecase }}\n                                <!-- {{(contact?.first_name?(contact?.first_name +' '+contact?.last_name):contact?.username)|titlecase}} -->\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"col-md-6\">\n                        <h2 align=\"Center\">Chat</h2>\n                        <div class=\"row\">\n                            <div class=\"col-md-12  message-contanier\">\n                                <div class=\"chat-messages\">\n                                    <div class=\"chat-message\" [ngClass]=\"message?.from_id==selectedUserId?'user-message':'bot-message'\" *ngFor=\"let message of messages; trackBy:messageIdentity\">{{message?.message}}</div>\n                                </div>\n                            </div>\n                            <div class=\"col-md-12\" *ngIf=\"selectedUserId\">\n                                <input type=\"text\" class=\"message-input\" placeholder=\"Enter your message here\" [(ngModel)]=\"messageText\">\n                                <button (click)=\"sendMessage()\" class=\"btn btn-default\">Send</button>\n                            </div>\n                        </div>\n                       \n                    </div>\n                </div>\n               \n                \n            </div>\n        </div>\n    </div>\n","import { Component } from '@angular/core';\nimport { ChatService } from 'src/app/core/services';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-chat',\n  templateUrl: './chat.component.html',\n  styleUrls: ['./chat.component.css']\n})\nexport class ChatComponent {\n  \n  userId:any=\"\";\n  selectedUserId:any ='';\n  requests:any=[];\n  contacts:any=[];\n  messages:any=[];\n  messageText:any;\n  messageInterval:any;\n  constructor(private chatService:ChatService, private router:Router, private route:ActivatedRoute,){\n    this.route.queryParams.subscribe(param=>{\n      this.selectedUserId = param?.selectedUserId;\n    })\n  }\n\n  ngOnInit(): void {\n    this.userId = localStorage.getItem('userId');\n    this.getChatRequests();\n    this.getConnections();\n    if(this.selectedUserId){\n      this.getMessages();\n    }\n  }\n\n  ngOnDestroy(){\n    clearInterval(this.messageInterval);\n  }\n  getChatRequests(){\n    let data = new FormData();\n    data.append('my_id', this.userId)\n    this.chatService.getRequests(data).subscribe((res:any)=>{\n      this.requests = res?.data?res?.data:[];\n      // this.contacts = this.requests;\n\n    })\n  }\n\n  getConnections(){\n    let data = new FormData();\n    data.append('my_id', this.userId)\n    this.chatService.getContacts(data).subscribe((res:any)=>{\n      this.contacts = res?.data?res?.data:[];\n    })\n  }\n\n\n  getMessages(clearMessageInterval:boolean=true){\n    let data = new FormData();\n    data.append('from_id', this.userId)\n    data.append('to_id', this.selectedUserId)\n    // console.log(\"fromId=\"+this.userId+\", to_id=\"+this.selectedUserId);\n   \n    this.chatService.getMessage(data).subscribe((res:any)=>{\n      if(clearMessageInterval){\n        clearInterval(this.messageInterval);\n        this.setMessageInterval();\n      }\n      this.messages = res?.data?res?.data:[];\n    })\n  }\n\n  setMessageInterval(){\n    this.messageInterval = setInterval(()=>{\n      this.getMessages(false);\n     }, 2500)\n\n  }\n\n\n  messageIdentity(index:any, item:any){\n    return item.id; \n }\n  sendMessage(){\n    let data = new FormData();\n    data.append('from_id', this.userId)\n    data.append('to_id', this.selectedUserId)\n    data.append('message', this.messageText)\n    this.chatService.sendMessage(data).subscribe((res:any)=>{\n      this.messageText = \"\";\n      this.getMessages();\n    })\n  }\n\n  acceptRejectRequest(id:any, action:string){\n    let data = new FormData();\n    data.append('id', id)\n    data.append('status', action)\n    this.chatService.acceptRejectRequest(data).subscribe((res:any)=>{\n      this.getChatRequests();\n    })\n  }\n  \n  onChangeContact(contact:any){\n    console.log('contact', contact)\n      this.selectedUserId = contact?.from_id==this.userId?contact?.to_id:contact?.from_id;\n      if(this.selectedUserId){\n        this.getMessages();\n      }\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
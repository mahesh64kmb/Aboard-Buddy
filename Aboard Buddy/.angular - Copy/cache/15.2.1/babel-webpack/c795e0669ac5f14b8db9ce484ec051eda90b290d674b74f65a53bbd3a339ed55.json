{"ast":null,"code":"import { endPoints } from 'src/app/core/config';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/shared/services\";\nexport class UserService {\n  constructor(api) {\n    this.api = api;\n    this.endPoints = endPoints.users; // fetch all endpoints;\n    this.dataEndpoint = endPoints.data; // fetch all endpoints;\n  }\n\n  signup(req = {}) {\n    return this.api.post(this.endPoints.signup, req);\n  }\n  login(req = {}) {\n    return this.api.post(this.endPoints.login, req);\n  }\n  getCountries(req = {}) {\n    return this.api.get(this.dataEndpoint.countries, req);\n  }\n  getCities(req = {}) {\n    return this.api.post(this.dataEndpoint.cities, req);\n  }\n  getUniversities(req = {}) {\n    return this.api.post(this.dataEndpoint.universities, req);\n  }\n  getProfile(req = {}) {\n    return this.api.post(this.endPoints.profile, req);\n  }\n  updateProfile(req = {}) {\n    return this.api.post(this.endPoints.updateProfile, req);\n  }\n  updateSellerProfile(req = {}) {\n    return this.api.post(this.endPoints.updateSellerProfile, req);\n  }\n  postTrip(req = {}) {\n    return this.api.post(this.endPoints.postTrip, req);\n  }\n  getTrips(req = {}) {\n    return this.api.post(this.endPoints.getTrips, req);\n  }\n  sellerSignup(req = {}) {\n    return this.api.post(this.endPoints.selelrSignup, req);\n  }\n  contactUs(req = {}) {\n    return this.api.post(this.endPoints.contactUs, req);\n  }\n}\nUserService.ɵfac = function UserService_Factory(t) {\n  return new (t || UserService)(i0.ɵɵinject(i1.ApiService));\n};\nUserService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: UserService,\n  factory: UserService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AACA,SAASA,SAAS,QAAQ,qBAAqB;;;AAK/C,OAAM,MAAOC,WAAW;EAItBC,YAAoBC,GAAe;IAAf,QAAG,GAAHA,GAAG;IAHvB,cAAS,GAAGH,SAAS,CAACI,KAAK,CAAC,CAAC;IAC7B,iBAAY,GAAGJ,SAAS,CAACK,IAAI,CAAC,CAAC;EAEQ;;EAEvCC,MAAM,CAACC,MAAQ,EAAE;IACf,OAAO,IAAI,CAACJ,GAAG,CAACK,IAAI,CAAC,IAAI,CAACR,SAAS,CAACM,MAAM,EAAEC,GAAG,CAAC;EAClD;EAEAE,KAAK,CAACF,MAAQ,EAAE;IACd,OAAO,IAAI,CAACJ,GAAG,CAACK,IAAI,CAAC,IAAI,CAACR,SAAS,CAACS,KAAK,EAAEF,GAAG,CAAC;EACjD;EAEAG,YAAY,CAACH,MAAQ,EAAE;IACrB,OAAO,IAAI,CAACJ,GAAG,CAACQ,GAAG,CAAC,IAAI,CAACC,YAAY,CAACC,SAAS,EAAEN,GAAG,CAAC;EACvD;EACAO,SAAS,CAACP,MAAQ,EAAE;IAClB,OAAO,IAAI,CAACJ,GAAG,CAACK,IAAI,CAAC,IAAI,CAACI,YAAY,CAACG,MAAM,EAAER,GAAG,CAAC;EACrD;EAEAS,eAAe,CAACT,MAAQ,EAAE;IACxB,OAAO,IAAI,CAACJ,GAAG,CAACK,IAAI,CAAC,IAAI,CAACI,YAAY,CAACK,YAAY,EAAEV,GAAG,CAAC;EAC3D;EAEAW,UAAU,CAACX,MAAQ,EAAE;IACnB,OAAO,IAAI,CAACJ,GAAG,CAACK,IAAI,CAAC,IAAI,CAACR,SAAS,CAACmB,OAAO,EAAEZ,GAAG,CAAC;EACnD;EAEAa,aAAa,CAACb,MAAQ,EAAE;IACtB,OAAO,IAAI,CAACJ,GAAG,CAACK,IAAI,CAAC,IAAI,CAACR,SAAS,CAACoB,aAAa,EAAEb,GAAG,CAAC;EACzD;EAEAc,mBAAmB,CAACd,MAAQ,EAAE;IAC5B,OAAO,IAAI,CAACJ,GAAG,CAACK,IAAI,CAAC,IAAI,CAACR,SAAS,CAACqB,mBAAmB,EAAEd,GAAG,CAAC;EAC/D;EAEAe,QAAQ,CAACf,MAAQ,EAAE;IACjB,OAAO,IAAI,CAACJ,GAAG,CAACK,IAAI,CAAC,IAAI,CAACR,SAAS,CAACsB,QAAQ,EAAEf,GAAG,CAAC;EACpD;EAEAgB,QAAQ,CAAChB,MAAQ,EAAE;IACjB,OAAO,IAAI,CAACJ,GAAG,CAACK,IAAI,CAAC,IAAI,CAACR,SAAS,CAACuB,QAAQ,EAAEhB,GAAG,CAAC;EACpD;EACAiB,YAAY,CAACjB,MAAQ,EAAE;IACrB,OAAO,IAAI,CAACJ,GAAG,CAACK,IAAI,CAAC,IAAI,CAACR,SAAS,CAACyB,YAAY,EAAElB,GAAG,CAAC;EACxD;EAEAmB,SAAS,CAACnB,MAAQ,EAAE;IAClB,OAAO,IAAI,CAACJ,GAAG,CAACK,IAAI,CAAC,IAAI,CAACR,SAAS,CAAC0B,SAAS,EAAEnB,GAAG,CAAC;EACrD;;AAlDWN,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAA0B,SAAX1B,WAAW;EAAA2B,YAFV;AAAM","names":["endPoints","UserService","constructor","api","users","data","signup","req","post","login","getCountries","get","dataEndpoint","countries","getCities","cities","getUniversities","universities","getProfile","profile","updateProfile","updateSellerProfile","postTrip","getTrips","sellerSignup","selelrSignup","contactUs","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\saisu\\Desktop\\abroadbuddy-main\\abroadbuddy-main\\src\\app\\core\\services\\user.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { endPoints } from 'src/app/core/config';\nimport { ApiService } from 'src/app/shared/services';\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  endPoints = endPoints.users; // fetch all endpoints;\n  dataEndpoint = endPoints.data; // fetch all endpoints;\n\n  constructor(private api: ApiService) { }\n\n  signup(req:any={}){\n    return this.api.post(this.endPoints.signup, req);\n  }\n\n  login(req:any={}){\n    return this.api.post(this.endPoints.login, req);\n  }\n\n  getCountries(req:any={}){\n    return this.api.get(this.dataEndpoint.countries, req);\n  }\n  getCities(req:any={}){\n    return this.api.post(this.dataEndpoint.cities, req);\n  }\n\n  getUniversities(req:any={}){\n    return this.api.post(this.dataEndpoint.universities, req);\n  }\n\n  getProfile(req:any={}){\n    return this.api.post(this.endPoints.profile, req);\n  }\n\n  updateProfile(req:any={}){\n    return this.api.post(this.endPoints.updateProfile, req);\n  }\n\n  updateSellerProfile(req:any={}){\n    return this.api.post(this.endPoints.updateSellerProfile, req);\n  }\n\n  postTrip(req:any={}){\n    return this.api.post(this.endPoints.postTrip, req);\n  }\n\n  getTrips(req:any={}){\n    return this.api.post(this.endPoints.getTrips, req);\n  }\n  sellerSignup(req:any={}){\n    return this.api.post(this.endPoints.selelrSignup, req);\n  }\n\n  contactUs(req:any={}){\n    return this.api.post(this.endPoints.contactUs, req);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
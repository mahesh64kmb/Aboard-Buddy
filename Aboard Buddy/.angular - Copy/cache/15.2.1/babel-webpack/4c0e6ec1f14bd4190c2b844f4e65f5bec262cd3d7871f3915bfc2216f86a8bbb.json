{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/core/services\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"src/app/shared/services\";\nimport * as i5 from \"@angular/common\";\nfunction SupportComponent_p_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 17);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r0.successMsg);\n  }\n}\nfunction SupportComponent_p_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 18);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r1.errorMsg);\n  }\n}\nexport class SupportComponent {\n  constructor(fb, userService, router, dataService) {\n    this.fb = fb;\n    this.userService = userService;\n    this.router = router;\n    this.dataService = dataService;\n    this.errorMsg = '';\n    this.successMsg = '';\n    this.userDetails = {};\n    this.userSubscription = {};\n  }\n  ngOnInit() {\n    this.contactUsForms = this.fb.group({\n      name: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n      phone_no: ['', Validators.required],\n      message: ['', Validators.required]\n    });\n    this.userSubscription = this.dataService.getUserDetails().subscribe(res => {\n      if (res) {\n        this.userDetails = res;\n        console.log('this.userDetails', this.userDetails);\n      }\n    });\n  }\n  ngOnDestroy() {\n    if (this.userSubscription) {\n      this.userSubscription.unsubscribe();\n    }\n  }\n  onSubmit() {\n    this.errorMsg = \"\";\n    this.successMsg = \"\";\n    this.isLoading = true;\n    this.submited = true;\n    if (this.contactUsForms.invalid) {\n      this.errorMsg = \"All fields are required*\";\n      this.contactUsForms.markAllAsTouched();\n      this.isLoading = false;\n      return;\n    }\n    let value = this.contactUsForms.value;\n    let keys = Object.keys(value);\n    let data = new FormData();\n    keys.forEach(key => {\n      data.append(key, value[key]);\n    });\n    this.userService.contactUs(data).subscribe(res => {\n      if (res?.status == '200') {\n        this.successMsg = \"Your request submited successfully. Redirecting...\";\n        setTimeout(() => {\n          let url = ['/'];\n          if (this.userDetails?.role !== \"student\") {\n            url = ['/seller/advertise/post-add'];\n          }\n          this.router.navigate(url);\n          this.isLoading = false;\n        }, 1500);\n      } else {\n        this.isLoading = false;\n        this.errorMsg = res?.message ? res?.message : 'Something went wrong, try again';\n      }\n    }, error => {\n      this.errorMsg = 'Something went wrong, try again';\n      this.isLoading = false;\n    });\n  }\n  get getControls() {\n    return this.contactUsForms.controls;\n  }\n}\nSupportComponent.ɵfac = function SupportComponent_Factory(t) {\n  return new (t || SupportComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.UserService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.DataService));\n};\nSupportComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: SupportComponent,\n  selectors: [[\"app-support\"]],\n  decls: 21,\n  vars: 7,\n  consts: [[1, \"LoginPage\", \"supportpage\", 2, \"background\", \"url(assets/image/bgimage.jpeg)\"], [1, \"container\"], [1, \"row\"], [1, \"col-md-6\"], [1, \"contactphoto\"], [\"src\", \"assets/image/ct1.jpeg\", \"alt\", \"\"], [1, \"contactpageform\"], [1, \"form\", \"register\", 3, \"formGroup\", \"ngSubmit\"], [\"class\", \"text-success text-align-left\", 4, \"ngIf\"], [\"class\", \"text-danger text-align-left\", 4, \"ngIf\"], [1, \"form__field\", \"mb-2\"], [\"type\", \"text\", \"name\", \"firstname\", \"placeholder\", \"Name\", \"required\", \"\", \"formControlName\", \"name\", 1, \"form__input\", 3, \"ngClass\"], [\"type\", \"text\", \"name\", \"lastname\", \"placeholder\", \"Email\", \"required\", \"\", \"formControlName\", \"email\", 1, \"form__input\", 3, \"ngClass\"], [\"type\", \"text\", \"name\", \"lastname\", \"placeholder\", \"Phone\", \"required\", \"\", \"formControlName\", \"phone_no\", 1, \"form__input\", 3, \"ngClass\"], [\"rows\", \"4\", \"cols\", \"50\", \"placeholder\", \"Write Something\", \"formControlName\", \"message\", 3, \"ngClass\"], [1, \"form__field\", \"col-md-12\"], [\"type\", \"submit\", \"value\", \"Submit\"], [1, \"text-success\", \"text-align-left\"], [1, \"text-danger\", \"text-align-left\"]],\n  template: function SupportComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"section\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4);\n      i0.ɵɵelement(5, \"img\", 5);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(6, \"div\", 3)(7, \"div\", 6)(8, \"form\", 7);\n      i0.ɵɵlistener(\"ngSubmit\", function SupportComponent_Template_form_ngSubmit_8_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵtemplate(9, SupportComponent_p_9_Template, 2, 1, \"p\", 8);\n      i0.ɵɵtemplate(10, SupportComponent_p_10_Template, 2, 1, \"p\", 9);\n      i0.ɵɵelementStart(11, \"div\", 10);\n      i0.ɵɵelement(12, \"input\", 11);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"div\", 10);\n      i0.ɵɵelement(14, \"input\", 12);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"div\", 10);\n      i0.ɵɵelement(16, \"input\", 13);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"div\", 10);\n      i0.ɵɵelement(18, \"textarea\", 14);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(19, \"div\", 15);\n      i0.ɵɵelement(20, \"input\", 16);\n      i0.ɵɵelementEnd()()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"formGroup\", ctx.contactUsForms);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.successMsg);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.errorMsg);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngClass\", (ctx.submited || (ctx.getControls == null ? null : ctx.getControls.name == null ? null : ctx.getControls.name.touched)) && (ctx.getControls == null ? null : ctx.getControls.name == null ? null : ctx.getControls.name.errors) ? \"invalid-input\" : \"\");\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngClass\", (ctx.submited || (ctx.getControls == null ? null : ctx.getControls.email == null ? null : ctx.getControls.email.touched)) && (ctx.getControls == null ? null : ctx.getControls.email == null ? null : ctx.getControls.email.errors) ? \"invalid-input\" : \"\");\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngClass\", (ctx.submited || (ctx.getControls == null ? null : ctx.getControls.phone_no == null ? null : ctx.getControls.phone_no.touched)) && (ctx.getControls == null ? null : ctx.getControls.phone_no == null ? null : ctx.getControls.phone_no.errors) ? \"invalid-input\" : \"\");\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngClass\", (ctx.submited || (ctx.getControls == null ? null : ctx.getControls.message == null ? null : ctx.getControls.message.touched)) && (ctx.getControls == null ? null : ctx.getControls.message == null ? null : ctx.getControls.message.errors) ? \"invalid-input\" : \"\");\n    }\n  },\n  dependencies: [i5.NgClass, i5.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.FormGroupDirective, i1.FormControlName],\n  styles: [\".contactphoto[_ngcontent-%COMP%]   img[_ngcontent-%COMP%] {\\n    width: 100%;\\n}\\n.LoginPage[_ngcontent-%COMP%]{\\n    background-size: cover !important;\\n    height: 100%;\\n    background-position: 100% !important;\\n    height: 87vh;\\n    overflow: hidden;\\n    position: relative;\\n    display: flex;\\n    justify-content: center;\\n    flex-direction: column;\\n}\\n.LoginPage[_ngcontent-%COMP%]:after {\\n    content: '';\\n    background: #0000008f;\\n    position: absolute;\\n    width: 100%;\\n    height: 100%;\\n    top: 0;\\n    bottom: 0;\\n}\\n.LoginPage[_ngcontent-%COMP%]   .container[_ngcontent-%COMP%]{\\n    position: relative;\\n    z-index:11;\\n     background: #fff;\\n    border-radius: 8px;\\n    z-index: 10;\\n    padding:2.7rem;\\n    box-shadow: rgb(60 64 67 / 30%) 0px 1px 2px 0px, rgb(60 64 67 / 15%) 0px 2px 6px 2px;\\n}\\n.form__field[_ngcontent-%COMP%]   textarea[_ngcontent-%COMP%] {\\n    height: 151px;\\n    background-color: var(--loginInputBackgroundColor);\\n    border-bottom-left-radius: 0;\\n    width:100%;\\n    padding:15px;\\n    border-top-left-radius: 0;\\n}\\n\\ntextarea[_ngcontent-%COMP%]{\\n    color: white\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvYWxsLW1vZHVsZXMvcGFnZXMvc3VwcG9ydC9zdXBwb3J0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxXQUFXO0FBQ2Y7QUFDQTtJQUNJLGlDQUFpQztJQUNqQyxZQUFZO0lBQ1osb0NBQW9DO0lBQ3BDLFlBQVk7SUFDWixnQkFBZ0I7SUFDaEIsa0JBQWtCO0lBQ2xCLGFBQWE7SUFDYix1QkFBdUI7SUFDdkIsc0JBQXNCO0FBQzFCO0FBQ0E7SUFDSSxXQUFXO0lBQ1gscUJBQXFCO0lBQ3JCLGtCQUFrQjtJQUNsQixXQUFXO0lBQ1gsWUFBWTtJQUNaLE1BQU07SUFDTixTQUFTO0FBQ2I7QUFDQTtJQUNJLGtCQUFrQjtJQUNsQixVQUFVO0tBQ1QsZ0JBQWdCO0lBQ2pCLGtCQUFrQjtJQUNsQixXQUFXO0lBQ1gsY0FBYztJQUNkLG9GQUFvRjtBQUN4RjtBQUNBO0lBQ0ksYUFBYTtJQUNiLGtEQUFrRDtJQUNsRCw0QkFBNEI7SUFDNUIsVUFBVTtJQUNWLFlBQVk7SUFDWix5QkFBeUI7QUFDN0I7O0FBRUE7SUFDSTtBQUNKIiwic291cmNlc0NvbnRlbnQiOlsiLmNvbnRhY3RwaG90byBpbWcge1xuICAgIHdpZHRoOiAxMDAlO1xufVxuLkxvZ2luUGFnZXtcbiAgICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyICFpbXBvcnRhbnQ7XG4gICAgaGVpZ2h0OiAxMDAlO1xuICAgIGJhY2tncm91bmQtcG9zaXRpb246IDEwMCUgIWltcG9ydGFudDtcbiAgICBoZWlnaHQ6IDg3dmg7XG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xufVxuLkxvZ2luUGFnZTphZnRlciB7XG4gICAgY29udGVudDogJyc7XG4gICAgYmFja2dyb3VuZDogIzAwMDAwMDhmO1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBoZWlnaHQ6IDEwMCU7XG4gICAgdG9wOiAwO1xuICAgIGJvdHRvbTogMDtcbn1cbi5Mb2dpblBhZ2UgLmNvbnRhaW5lcntcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgei1pbmRleDoxMTtcbiAgICAgYmFja2dyb3VuZDogI2ZmZjtcbiAgICBib3JkZXItcmFkaXVzOiA4cHg7XG4gICAgei1pbmRleDogMTA7XG4gICAgcGFkZGluZzoyLjdyZW07XG4gICAgYm94LXNoYWRvdzogcmdiKDYwIDY0IDY3IC8gMzAlKSAwcHggMXB4IDJweCAwcHgsIHJnYig2MCA2NCA2NyAvIDE1JSkgMHB4IDJweCA2cHggMnB4O1xufVxuLmZvcm1fX2ZpZWxkIHRleHRhcmVhIHtcbiAgICBoZWlnaHQ6IDE1MXB4O1xuICAgIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWxvZ2luSW5wdXRCYWNrZ3JvdW5kQ29sb3IpO1xuICAgIGJvcmRlci1ib3R0b20tbGVmdC1yYWRpdXM6IDA7XG4gICAgd2lkdGg6MTAwJTtcbiAgICBwYWRkaW5nOjE1cHg7XG4gICAgYm9yZGVyLXRvcC1sZWZ0LXJhZGl1czogMDtcbn1cblxudGV4dGFyZWF7XG4gICAgY29sb3I6IHdoaXRlXG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["Validators","i0","SupportComponent","constructor","fb","userService","router","dataService","ngOnInit","contactUsForms","group","name","required","email","phone_no","message","userSubscription","getUserDetails","subscribe","res","userDetails","console","log","ngOnDestroy","unsubscribe","onSubmit","errorMsg","successMsg","isLoading","submited","invalid","markAllAsTouched","value","keys","Object","data","FormData","forEach","key","append","contactUs","status","setTimeout","url","role","navigate","error","getControls","controls","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\saisu\\Desktop\\abroadbuddy-main\\abroadbuddy-main\\src\\app\\all-modules\\pages\\support\\support.component.ts","C:\\Users\\saisu\\Desktop\\abroadbuddy-main\\abroadbuddy-main\\src\\app\\all-modules\\pages\\support\\support.component.html"],"sourcesContent":["import { Component,OnInit } from '@angular/core';\nimport { FormGroup,FormBuilder, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { UserService } from 'src/app/core/services';\nimport { DataService } from 'src/app/shared/services';\n@Component({\n  selector: 'app-support',\n  templateUrl: './support.component.html',\n  styleUrls: ['./support.component.css']\n})\nexport class SupportComponent {\n  contactUsForms:FormGroup;\n  submited: boolean; \n  isLoading:boolean; \n  errorMsg = ''; \n  successMsg = '';\n  userDetails:any = {}; \n  userSubscription:any={};\n  constructor(private fb: FormBuilder, private userService: UserService, private router:Router, private dataService:DataService) { }\n  ngOnInit(): void {\n    this.contactUsForms = this.fb.group({\n          name:['', Validators.required],\n          email:['', [Validators.required, Validators.email]],\n          phone_no:['', Validators.required],\n          message:['', Validators.required],          \n    });\n\n    this.userSubscription = this.dataService.getUserDetails().subscribe((res:any)=>{\n      if(res){\n        this.userDetails = res;\n        console.log('this.userDetails', this.userDetails)\n      }\n    })\n\n  }\n\n  ngOnDestroy(){\n    if(this.userSubscription){this.userSubscription.unsubscribe()}\n  }\n\n  onSubmit(){\n    this.errorMsg = \"\";\n    this.successMsg = \"\";\n    this.isLoading = true;\n    this.submited = true;\n    if(this.contactUsForms.invalid){\n      this.errorMsg = \"All fields are required*\";\n      this.contactUsForms.markAllAsTouched();\n      this.isLoading = false;\n      return;\n    }\n\n    \n    let value = this.contactUsForms.value;\n    let keys = Object.keys(value);\n\n    let data = new FormData();\n    keys.forEach(key=>{\n      data.append(key, value[key]);\n    })\n\n    this.userService.contactUs(data).subscribe((res:any)=>{\n      if(res?.status == '200'){\n        this.successMsg = \"Your request submited successfully. Redirecting...\";\n        setTimeout(()=>{\n           let url =['/'];\n           if(this.userDetails?.role !==\"student\"){\n            url =['/seller/advertise/post-add'];\n           }\n            this.router.navigate(url);\n           this.isLoading = false;\n        }, 1500)\n\n      }else{\n        this.isLoading = false;\n        this.errorMsg = res?.message?res?.message:'Something went wrong, try again';\n      }\n    }, error=>{\n      this.errorMsg = 'Something went wrong, try again';\n      this.isLoading = false;\n    })\n\n  }\n  \n  get getControls(){\n    return this.contactUsForms.controls;\n  }\n\n}\n","<section class=\"LoginPage supportpage\" style=\"background:url(assets/image/bgimage.jpeg);\">\n    <div class=\"container\">\n      <div class=\"row\">\n          <div class=\"col-md-6\">\n              <div class=\"contactphoto\">\n                  <img src=\"assets/image/ct1.jpeg\" alt=\"\">\n              </div>\n          </div>\n          <div class=\"col-md-6\">\n             <div class=\"contactpageform\">\n                 <form   [formGroup]=\"contactUsForms\" class=\"form register\" (ngSubmit)=\"onSubmit()\">\n                    <p class=\"text-success text-align-left\" *ngIf=\"successMsg\" >{{successMsg}}</p>\n                    <p class=\"text-danger text-align-left\" *ngIf=\"errorMsg\" >{{errorMsg}}</p>\n                     <div class=\"form__field mb-2\">\n                       <input  type=\"text\" name=\"firstname\" class=\"form__input\" placeholder=\"Name\" required formControlName=\"name\" [ngClass]=\"((submited || getControls?.name?.touched) && getControls?.name?.errors)?'invalid-input':''\">\n                     </div>\n               \n                     <div class=\"form__field mb-2\">\n                       <input  type=\"text\" name=\"lastname\" class=\"form__input\" placeholder=\"Email\" required formControlName=\"email\" [ngClass]=\"((submited || getControls?.email?.touched) && getControls?.email?.errors)?'invalid-input':''\">\n                     </div>\n                     <div class=\"form__field mb-2\">\n                      <input  type=\"text\" name=\"lastname\" class=\"form__input\" placeholder=\"Phone\" required formControlName=\"phone_no\" [ngClass]=\"((submited || getControls?.phone_no?.touched) && getControls?.phone_no?.errors)?'invalid-input':''\">\n                     </div>\n                     \n                     <div class=\"form__field mb-2\">\n                         <textarea rows=\"4\" cols=\"50\" placeholder=\"Write Something\" formControlName=\"message\" [ngClass]=\"((submited || getControls?.message?.touched) && getControls?.message?.errors)?'invalid-input':''\"></textarea>\n                     </div>\n                    \n                     <div class=\"form__field col-md-12\">\n                       <input type=\"submit\" value=\"Submit\">\n                     </div>\n               \n                   </form>\n             </div>\n          </div>\n      </div>\n    </div>\n </section>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}